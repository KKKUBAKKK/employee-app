@using employee_app.Services
@using employeeapp.Helpers
@using Microsoft.JSInterop
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject EmployeeAuthenticationStateProvider AuthStateProvider
@inject IJSRuntime Js

<div class="page">
    <nav class="sidebar">
        <div class="sidebar-brand">
            <img src="/images/car-rental.png" alt="Company Logo" class="logo" />
            <h3>Car Rental</h3>
        </div>
        
        <NavMenu />
    </nav>

    <main>
        <div class="top-bar">
            <div class="user-section" style="margin-left: auto;">>
                <span class="user-name" hidden="@string.IsNullOrEmpty(username)">@username</span>
                <button class="logout-btn" @onclick="Logout" hidden="@string.IsNullOrEmpty(username)">Logout </button>
                <button class="customer-side-btn" @onclick="OpenPage">Customer side</button>
            </div>
        </div>

        <div class="content">
            @Body
        </div>
    </main>
</div>

@code {

    private string username;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user == null)
            username = "";

        if (user.Identity.IsAuthenticated)
        {
            username = user.Identity.Name;
        }
        else
        {
            username = "";
        }
    }
    
    private async Task Logout()
    {
        await AuthStateProvider.MarkUserAsLoggedOut();
        Navigation.NavigateTo("/login");
        await Js.InvokeVoidAsync("refreshPage");
    }

    private void OpenPage()
    {
        JSRuntime.InvokeVoidAsync("open", Constants.CustomerWebSide, "_blank");
    }

}

<style>
    .page {
        display: flex;
        height: 100vh;
    }

    .sidebar {
        width: 250px;
        background-color: #2c3e50;
        color: white;
        padding: 1rem;
    }

    .sidebar-brand {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #34495e;
    }

    .logo {
        width: 40px;
        height: 40px;
    }

    main {
        flex: 1;
        display: flex;
        flex-direction: column;
        background-color: #f5f6fa;
    }

    .top-bar {
        background-color: white;
        padding: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: end;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .search-section {
        display: flex;
        gap: 0.5rem;
    }

    .search-input {
        padding: 0.5rem;
        width: 300px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .filters {
        display: flex;
        gap: 0.5rem;
    }

    .filters select {
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    button {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .search-btn, .filter-btn {
        background-color: #3498db;
        color: white;
    }

    .logout-btn {
        background-color: #e74c3c;
        color: white;
    }

    .customer-side-btn {
        background-color: blue;
        color: white;
    }

    .content {
        padding: 1rem;
        flex: 1;
        overflow-y: auto;
    }

    .user-section-logout {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-section {
        display: flex;
        align-items: center;
        gap: 1rem;
    }
</style>