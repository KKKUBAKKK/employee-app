@page "/rentals"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div class="page-header">
    <h1>Active Rentals</h1>
    <div class="header-actions">
        <button class="header-btn new-rental">
            <i class="fas fa-plus"></i> New Rental
        </button>
        <button class="header-btn export">
            <i class="fas fa-file-export"></i> Export
        </button>
    </div>
</div>

<div class="rental-dashboard">
    <div class="stats-cards">
        <div class="stat-card">
            <div class="stat-icon active">
                <i class="fas fa-key"></i>
            </div>
            <div class="stat-content">
                <h3>Active Rentals</h3>
                <p class="stat-value">@activeRentals.Count</p>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon overdue">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="stat-content">
                <h3>Overdue</h3>
                <p class="stat-value">@activeRentals.Count(r => r.Status == "Overdue")</p>
            </div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon returning">
                <i class="fas fa-clock"></i>
            </div>
            <div class="stat-content">
                <h3>Due Today</h3>
                <p class="stat-value">@activeRentals.Count(r => r.Status == "Due Today")</p>
            </div>
        </div>
    </div>

    <div class="main-content">
        <div class="filters-bar">
            <div class="search-section">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search by customer, plate number, or rental ID..." />
                </div>
            </div>
            
            <div class="filter-section">
                <select class="filter-select">
                    <option value="">All Statuses</option>
                    <option value="active">Active</option>
                    <option value="overdue">Overdue</option>
                    <option value="due-today">Due Today</option>
                </select>
                
                <select class="filter-select">
                    <option value="">All Locations</option>
                    <option value="main">Main Office</option>
                    <option value="downtown">Downtown</option>
                    <option value="airport">Airport</option>
                </select>
                
                <button class="filter-btn">
                    <i class="fas fa-sliders-h"></i>
                    More Filters
                </button>
            </div>
        </div>

        <div class="rentals-table">
            <table>
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" class="select-all" />
                        </th>
                        <th>Vehicle & Customer</th>
                        <th>Rental Period</th>
                        <th>Location</th>
                        <th>Status</th>
                        <th>Payment</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rental in activeRentals)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" />
                            </td>
                            <td>
                                <div class="rental-info">
                                    <img src="@rental.VehicleImage" alt="@rental.VehicleModel" />
                                    <div>
                                        <div class="vehicle-info">
                                            <span class="model">@rental.VehicleModel</span>
                                            <span class="plate">@rental.LicensePlate</span>
                                        </div>
                                        <div class="customer-info">
                                            <span class="name">@rental.CustomerName</span>
                                            <span class="phone">@rental.CustomerPhone</span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="rental-period">
                                    <div class="date-range">
                                        <span>@rental.StartDate.ToShortDateString()</span>
                                        <i class="fas fa-arrow-right"></i>
                                        <span>@rental.EndDate.ToShortDateString()</span>
                                    </div>
                                    <div class="duration">@rental.Duration days</div>
                                </div>
                            </td>
                            <td>
                                <div class="location-info">
                                    <span class="location">@rental.Location</span>
                                </div>
                            </td>
                            <td>
                                <span class="status-badge @rental.Status.ToLower()">@rental.Status</span>
                            </td>
                            <td>
                                <div class="payment-info">
                                    <span class="amount">$@rental.Amount</span>
                                    <span class="payment-status @rental.PaymentStatus.ToLower()">
                                        @rental.PaymentStatus
                                    </span>
                                </div>
                            </td>
                            <td>
                                <div class="actions">
                                    <button class="action-btn" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn" title="Edit Rental">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn" title="Process Return">
                                        <i class="fas fa-check-circle"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="pagination">
            <button class="page-btn" disabled>
                <i class="fas fa-chevron-left"></i>
            </button>
            <button class="page-btn active">1</button>
            <button class="page-btn">2</button>
            <button class="page-btn">3</button>
            <span class="page-separator">...</span>
            <button class="page-btn">12</button>
            <button class="page-btn">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
    </div>
</div>

@code {
    private List<RentalData> activeRentals = new()
    {
        new RentalData
        {
            VehicleModel = "Toyota Camry",
            LicensePlate = "ABC-123",
            CustomerName = "John Smith",
            CustomerPhone = "(555) 123-4567",
            StartDate = DateTime.Now.AddDays(-5),
            EndDate = DateTime.Now.AddDays(2),
            Duration = 7,
            Location = "Main Office",
            Status = "Active",
            Amount = 350.00m,
            PaymentStatus = "Paid",
            VehicleImage = "/api/placeholder/60/60"
        },
        new RentalData
        {
            VehicleModel = "Honda Civic",
            LicensePlate = "XYZ-789",
            CustomerName = "Jane Doe",
            CustomerPhone = "(555) 987-6543",
            StartDate = DateTime.Now.AddDays(-3),
            EndDate = DateTime.Now.AddDays(-1),
            Duration = 2,
            Location = "Downtown",
            Status = "Overdue",
            Amount = 150.00m,
            PaymentStatus = "Pending",
            VehicleImage = "/api/placeholder/60/60"
        },
        // Add more sample rentals as needed
    };

    public class RentalData
    {
        public string VehicleModel { get; set; }
        public string LicensePlate { get; set; }
        public string CustomerName { get; set; }
        public string CustomerPhone { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public int Duration { get; set; }
        public string Location { get; set; }
        public string Status { get; set; }
        public decimal Amount { get; set; }
        public string PaymentStatus { get; set; }
        public string VehicleImage { get; set; }
    }
}

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .header-btn {
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .header-btn.new-rental {
        background-color: #2ecc71;
        color: white;
    }

    .header-btn.export {
        background-color: #3498db;
        color: white;
    }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .stat-icon {
        width: 48px;
        height: 48px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .stat-icon.active { background-color: #e8f8f5; color: #2ecc71; }
    .stat-icon.overdue { background-color: #fdedec; color: #e74c3c; }
    .stat-icon.returning { background-color: #eaf2f8; color: #3498db; }

    .stat-content h3 {
        font-size: 0.875rem;
        color: #64748b;
        margin: 0;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: bold;
        margin: 0;
    }

    .main-content {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .filters-bar {
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-box {
        position: relative;
        width: 300px;
    }

    .search-box i {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #64748b;
    }

    .search-box input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
    }

    .filter-section {
        display: flex;
        gap: 1rem;
    }

    .filter-select {
        padding: 0.75rem;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
        min-width: 150px;
    }

    .filter-btn {
        padding: 0.75rem 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
        background: white;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
    }

    .rentals-table {
        width: 100%;
        overflow-x: auto;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th {
        text-align: left;
        padding: 1rem;
        background-color: #f8fafc;
        color: #64748b;
        font-weight: 500;
    }

    td {
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .rental-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .rental-info img {
        width: 40px;
        height: 40px;
        border-radius: 4px;
        object-fit: cover;
    }

    .vehicle-info, .customer-info {
        display: flex;
        flex-direction: column;
    }

    .model {
        font-weight: 500;
    }

    .plate, .phone {
        font-size: 0.875rem;
        color: #64748b;
    }

    .rental-period {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .date-range {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .duration {
        font-size: 0.875rem;
        color: #64748b;
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 999px;
        font-size: 0.875rem;
    }

    .status-badge.active { background-color: #e8f8f5; color: #2ecc71; }
    .status-badge.overdue { background-color: #fdedec; color: #e74c3c; }
    .status-badge.due { background-color: #fff3e0; color: #f39c12; }

    .payment-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .amount {
        font-weight: 500;
    }

    .payment-status {
        font-size: 0.875rem;
    }

    .payment-status.paid { color: #2ecc71; }
    .payment-status.pending { color: #f39c12; }

    .actions {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 32px;
        height: 32px;
        border-radius: 4px;
        border: 1px solid #e2e8f0;
        background: white;
        color: #64748b;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>