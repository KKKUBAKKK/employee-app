@page "/"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div class="container-fluid p-4">
    <div class="row mb-4">
        <div class="col">
            <h2>Car Rental Dashboard</h2>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="RefreshData">
                <i class="fas fa-sync-alt"></i> Refresh
            </button>
        </div>
    </div>

    <!-- Quick Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Available Cars</h5>
                    <h2 class="card-text">@availableCars</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Active Rentals</h5>
                    <h2 class="card-text">@activeRentals</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <h5 class="card-title">Pending returns</h5>
                    <h2 class="card-text">@pendingReturns</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Reservations</h5>
                    <h2 class="card-text">@reservations</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities and Due Returns -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Recent Activities</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Time</th>
                                    <th>Activity</th>
                                    <th>Employee</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var activity in recentActivities)
                                {
                                    <tr>
                                        <td>@activity.Timestamp.ToShortTimeString()</td>
                                        <td>@activity.Description</td>
                                        <td>@activity.EmployeeName</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Due Returns Today</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Return Time</th>
                                    <th>Customer</th>
                                    <th>Vehicle</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var rental in dueReturnsList)
                                {
                                    <tr>
                                        <td>@rental.ReturnTime.ToShortTimeString()</td>
                                        <td>@rental.CustomerName</td>
                                        <td>@rental.VehicleInfo</td>
                                        <td>
                                            <span class="badge @GetStatusBadgeClass(rental.Status)">
                                                @rental.Status
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex gap-2">
                        <button class="btn btn-primary" @onclick="NewRental">
                            <i class="fas fa-plus"></i> New Rental
                        </button>
                        <button class="btn btn-success" @onclick="ProcessReturn">
                            <i class="fas fa-check"></i> Process Return
                        </button>
                        <button class="btn btn-info" @onclick="ManageReservations">
                            <i class="fas fa-calendar"></i> Manage Reservations
                        </button>
                        <button class="btn btn-secondary" @onclick="ViewReports">
                            <i class="fas fa-chart-bar"></i> View Reports
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int availableCars = 0;
    private int activeRentals = 0;
    private int pendingReturns = 0;
    private int reservations = 0;
    private List<Activity> recentActivities = new();
    private List<RentalReturn> dueReturnsList = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        // TODO: Implement data loading from service
        await Task.CompletedTask;
    }

    private async Task RefreshData()
    {
        await LoadDashboardData();
    }

    private string GetStatusBadgeClass(string status) => status switch
    {
        "On Time" => "bg-success",
        "Delayed" => "bg-warning",
        "Overdue" => "bg-danger",
        _ => "bg-secondary"
    };

    private async Task NewRental()
    {
        // TODO: Implement navigation to new rental page
        await Task.CompletedTask;
    }

    private async Task ProcessReturn()
    {
        // TODO: Implement return processing
        await Task.CompletedTask;
    }

    private async Task ManageReservations()
    {
        // TODO: Implement navigation to reservations page
        await Task.CompletedTask;
    }

    private async Task ViewReports()
    {
        // TODO: Implement navigation to reports page
        await Task.CompletedTask;
    }

    private class Activity
    {
        public DateTime Timestamp { get; set; }
        public string Description { get; set; }
        public string EmployeeName { get; set; }
    }

    private class RentalReturn
    {
        public DateTime ReturnTime { get; set; }
        public string CustomerName { get; set; }
        public string VehicleInfo { get; set; }
        public string Status { get; set; }
    }
}